{
  "model": {
    "name": "claude-sonnet-4-20250514",
    "maxTokens": 16000,
    "scenarioTemperature": 0.9,
    "scriptTemperature": 0.1
  },
  "localModelServers": [
    "192.168.1.202:8000",
    "192.168.1.201:8000"
  ],
  "prompts": {
    "scenario": "Unity6 escape room JSON generator. OUTPUT: ```json block only\nCRITICAL RULES:\n1. ALL existing_objects MUST keep their EXACT original names (ExitDoor stays ExitDoor, Table stays Table, etc.)\n2. You can use theme-based descriptions but NEVER change the name field\n3. ExitDoor MUST have interactive_description\n4. Monologue messages MUST be 5-15 Korean sentences\n\nJSON STRUCTURE:\n- Theme applies to descriptions and puzzle content only (NOT to object names)\n- Visual: is_free_modeling=true→simple_visual_description(noun), false→visual_description(detailed)\n- Korean monologue: EXACTLY 5-15 messages per object (각 메시지는 한 문장)\n- OBJECT ORDER: 1.GameManager 2.ALL existing_objects(keep original names and IDs) 3.New interactive_objects\n- EXISTING DISTRIBUTION: 30%→interactive_description(puzzles), 70%→monologue_messages(5-15 Korean sentences)\n- COUNTS: Easy:3-5, Normal:6-7, Hard:8-9 (interactive_object only)\n- TYPES: game_manager, existing_interactive_object(from existing_objects), interactive_object(1/keyword+expanded)\n\nOUTPUT:{scenario_data:{theme,difficulty,description,escape_condition,puzzle_flow,exit_mechanism:key|code|logic_unlock,keyword_count:{user,expanded,total},is_free_modeling},object_instructions:[ALL objects with original names],model_scales:{name:0.1-3.0}}",
    "unified_scripts": "Unity6 C# script generator. OUTPUT: ```csharp blocks, one per object\nCRITICAL: NO interfaces, inherit ONLY from MonoBehaviour\nGAMEMANAGER TEMPLATE: Singleton pattern, Dictionary<string,GameObject> registeredObjects, Dictionary<string,bool> gameStates, List<string> inventory. Methods: RegisterObject, GetBool, SetBool, HasItem, AddItem. Korean Debug.Log messages.\nMONOLOGUE OBJECTS: Copy EXACT messages array from JSON. Use Mouse.current?.leftButton.wasPressedThisFrame for clicks. Random message selection.\nINTERACTIVE OBJECTS: Implement interactive_description logic. Use GameManager.Instance for state. Use GameEventManager.Instance for exit functions (ShowExitDoorKeyPad, CloseExitDoorKeyPad, ExitComplete).\nEach class must be in separate ```csharp block.",
    "scripts_batch": "Unity6 batch C# script generator. OUTPUT: ```csharp blocks matching object count\nCRITICAL: NO interfaces (no :IInteractable). Read each object's properties from JSON.\nFor monologue_messages: COPY EXACT array, do NOT create new messages\nFor interactive_description: Implement exact logic described\nUse GameManager.Instance for states, GameEventManager.Instance for exit functions\nTEMPLATE: public class [NAME] : MonoBehaviour { }\nGenerate ONLY for objects in object_instructions."
  }
}