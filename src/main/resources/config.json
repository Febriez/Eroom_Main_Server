{
  "model": {
    "name": "claude-sonnet-4-20250514",
    "maxTokens": 16000,
    "scenarioTemperature": 0.9,
    "scriptTemperature": 0.1
  },
  "prompts": {
    "scenario": "Unity6 escape room scenario generator. INPUT: uuid, puid, theme, keywords array, difficulty (easy/normal/hard), room_prefab_url. KEYWORD EXPANSION: Auto-generate theme-appropriate keywords if insufficient. OBJECTS: Easy 4-5, Normal 5-7, Hard 7-9 (excludes GameManager). PUZZLES: Easy=direct/simple, Normal=moderate inference, Hard=complex multi-source. INTERACTIONS: movement, rotation, open/close, item combination only. Use Unity6 InputSystem (Mouse.current.leftButton/rightButton.wasPressedThisFrame, Keyboard inputs). FORBIDDEN: visual/lighting/color/transparency/glow/particles/animations/audio. COMPONENTS: Unity6 colliders, Rigidbody, UI only. LANGUAGE: Korean failure_feedback/hints, English others. NAMING: PascalCase, avoid C# keywords (object, string, class, public, private, static, void, int, bool, float, return, if, else, for, while). JSON: {\"scenario_data\":{\"theme\",\"difficulty\",\"description\",\"escape_condition\",\"puzzle_flow\"},\"object_instructions\":[{\"name\":\"GameManager\",\"type\":\"game_manager\",\"functional_description\":\"Singleton with registeredObjects/puzzleStates/inventory Dictionaries, validation, monitoring\"},{\"name\":\"ObjectName\",\"type\":\"interactive_object\",\"visual_description\",\"interaction_method\":\"left/right_click, e/f_key, arrows, numbers, wasd\",\"functional_description\":\"State management, sequences, validation, inventory, dependencies, GameManager integration\",\"placement_suggestion\",\"puzzle_role\",\"dependencies\",\"success_outcome\",\"failure_feedback\":\"Korean atmospheric\",\"hint_messages\":\"5-10 Korean phrases\"}]}. MANDATORY: GameManager first. Output JSON only.",
    "unified_scripts": "Unity6 C# escape room script generator. INPUT: scenario JSON with object_instructions array. CRITICAL: First object MUST be GameManager (type='game_manager') - generate FIRST. UNITY6: Use GameObject.FindAnyObjectByType<T>(), Mouse.current.leftButton/rightButton.wasPressedThisFrame, Keyboard.current.hKey.wasPressedThisFrame. NO legacy Input (Input.GetKeyDown/GetMouseButtonDown FORBIDDEN). MOUSE INTERACTION: Use Update() with Camera.main.ScreenPointToRay(Mouse.current.position.ReadValue()) and Physics.Raycast to detect clicks on this object. NO OnMouseDown/OnMouseUp events. CENTRALIZED SELECTION: GameManager manages single selection state. Add GameObject currentSelectedObject=null, SetSelectedObject(GameObject obj), ClearSelection(), IsObjectSelected(GameObject obj), ShowUsageInstructions(string usage) methods. Objects call GameManager.Instance.SetSelectedObject(gameObject) when clicked, automatically deselects others. SELECTION LOGIC: Click calls SetSelectedObject(). When selected, show Korean selection message + usage instructions (NOT hints). When deselected, show deselection message. H-key shows mysterious atmospheric hints only for selected objects. COLLIDERS: Auto-added by client, implement Raycast-based mouse detection. FORBIDDEN: ParticleSystem, AudioSource, Animator, Light, material changes, AddComponent, RequireComponent, UI creation. OUTPUT: Markdown blocks with script name as language. MINIFIED single-line code, use 'var', PascalCase. REQUIRED USING STATEMENTS: Every script MUST start with: using UnityEngine; using UnityEngine.InputSystem; using System.Collections; using System.Collections.Generic; (add using System.Linq; if needed for LINQ operations). GAMEMANAGER: singleton Instance, room_clear=false, puzzleStates/registeredObjects/inventoryQuantity/inventoryBool Dictionaries, currentSelectedObject=null, ShowPlayerHint/ShowRandomHint/RegisterObject/Get/SetPuzzleState/CheckVictoryCondition/HasInventoryItem/AddInventoryItem/ConsumeInventoryItem/ValidateDependencies/SetSelectedObject/ClearSelection/IsObjectSelected/ShowUsageInstructions methods. OBJECTS: NO isSelected field, use GameManager.Instance.IsObjectSelected(gameObject), Register in Start(), Korean Debug.Log with detailed messages, H-key mysterious hints only for selected objects, randomHints array, dependencies array, Update() with Raycast mouse detection for interaction_method actions, usage instructions on selection, failure_feedback messages, GameManager integration."
  }
}